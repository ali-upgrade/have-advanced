(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{424:function(t,e,v){"use strict";v.r(e);var _=v(2),r=Object(_.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"git-flow工作流"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-flow工作流"}},[t._v("#")]),t._v(" Git Flow工作流")]),t._v(" "),e("p",[t._v("Git Flow是一种流行的Git工作流程，专门用于协作开发和和管理软件项目。Git Flow定义了一套明确的分支策略和规则，以便团队能够更有序地协作，同时保存项目的稳定性")]),t._v(" "),e("h2",{attrs:{id:"git-flow的主要分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-flow的主要分支"}},[t._v("#")]),t._v(" GIT Flow的主要分支")]),t._v(" "),e("p",[e("strong",[t._v("主分支(master)")]),t._v(":主分支是稳定版本的分支。在GIT FLOW中，它通常包含发布的代码，任何代码在被合并到主分支之前都应经过充分测试和审查")]),t._v(" "),e("p",[e("strong",[t._v("开发分支(develop)")]),t._v(":开发分支用于整个团队的协作开发。所有新功能和改进功能都从开发分支开始，然后合并到此分支中")]),t._v(" "),e("p",[e("strong",[t._v("功能分支(feature)")]),t._v(":每个新功能都应该在单独的功能分支上进行开发。功能分支从开发分支分出去，开发完成后，将其合并会开发分支。")]),t._v(" "),e("p",[e("strong",[t._v("发布分支(release)")]),t._v(":在准备发布新版本是，创建一个发布分支。在发布分支上可以进行版本号更新，版本测试和准备发布的工作。一旦准备就绪，发布分支将被合并到主分支和开发分支")]),t._v(" "),e("p",[e("strong",[t._v("修复分支(hotfix)")]),t._v(":修复分支用于紧急修复生产环境中的严重问题。它从主分支分出，修复问题后，将其合并回主分支和开发分支")]),t._v(" "),e("h2",{attrs:{id:"基本的git-flow工程流程示例"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基本的git-flow工程流程示例"}},[t._v("#")]),t._v(" 基本的GIT FLOW工程流程示例:")]),t._v(" "),e("ol",[e("li",[t._v("团队成员从develop分支创建新功能分支，例如feature-new-feature。")]),t._v(" "),e("li",[t._v("开发完成后，他们提交并推送功能分支")]),t._v(" "),e("li",[t._v("团队成员创建一个发布分支，例如release-1.0,并在其中进行版本号更新和测试")]),t._v(" "),e("li",[t._v("一直发布分支准备好，它被合并回master和develop分支")]),t._v(" "),e("li",[t._v("如果在生产中发现严重错误，团队可以创建一个修复分支，例如hotfix-bug-fix，进行修复并将其合并回主分支和开发分支")]),t._v(" "),e("li",[t._v("团队成员持续从develop分支创建新功能分支，以进行下轮开发")])])])}),[],!1,null,null,null);e.default=r.exports}}]);