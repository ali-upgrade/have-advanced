(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{400:function(t,a,v){t.exports=v.p+"assets/img/ForceNegotiatedcache.04cfa4c4.png"},418:function(t,a,v){"use strict";v.r(a);var _=v(2),e=Object(_.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"http缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http缓存"}},[t._v("#")]),t._v(" HTTP缓存")]),t._v(" "),a("p",[t._v("当浏览器访问网站的时候，第一此访问的时候需要加载资源html,css,js图片，向服务器请求资源第一次之后访问可以利用缓存的功能从缓存中获取可以提高页面加载的速度，输入网址到页面加载减少网络请求的体积和数量加快页面性能。")]),t._v(" "),a("h2",{attrs:{id:"强制缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#强制缓存"}},[t._v("#")]),t._v(" 强制缓存")]),t._v(" "),a("h3",{attrs:{id:"强制缓存的过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#强制缓存的过程"}},[t._v("#")]),t._v(" 强制缓存的过程")]),t._v(" "),a("ul",[a("li",[t._v("浏览器向服务器发送请求")]),t._v(" "),a("li",[t._v("服务器返回资源")]),t._v(" "),a("li",[t._v("浏览器再次请求先判断"),a("code",[t._v("max-age")]),t._v("有没有过期，没有过期直接从缓存里拿资源")])]),t._v(" "),a("h3",{attrs:{id:"cache-control"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cache-control"}},[t._v("#")]),t._v(" cache-control")]),t._v(" "),a("p",[t._v("通过"),a("code",[t._v("cache-control")]),t._v("设置一个最大的有效时间"),a("code",[t._v("max-age=300")]),t._v("需要缓存设置"),a("code",[t._v("cache-control")]),t._v("，不需要缓存就不设置"),a("code",[t._v("cache-control")]),t._v(","),a("code",[t._v("cache-control")]),t._v("的设置都是有服务器通过响应头设置过来")]),t._v(" "),a("h2",{attrs:{id:"协商缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#协商缓存"}},[t._v("#")]),t._v(" 协商缓存")]),t._v(" "),a("p",[t._v("是一种服务器的缓存策略")]),t._v(" "),a("h3",{attrs:{id:"协商缓存的过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#协商缓存的过程"}},[t._v("#")]),t._v(" 协商缓存的过程")]),t._v(" "),a("ul",[a("li",[t._v("浏览器向服务器发送请求")]),t._v(" "),a("li",[t._v("服务器返回资源和资源标识")]),t._v(" "),a("li",[t._v("浏览器再次发送请求和资源标识")]),t._v(" "),a("li",[t._v("如果是最新资源服务器返回"),a("code",[t._v("200")]),t._v("状态码，最新资源和新的资源标识，如果不是最新资源服务器返回304状态码直接从缓存中拿资源")])]),t._v(" "),a("h3",{attrs:{id:"缓存资源的资源标识"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缓存资源的资源标识"}},[t._v("#")]),t._v(" 缓存资源的资源标识")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("Last-Modified")]),t._v(": 资源上一次修改的时间，后续访问的时候发送请求和资源标识的字段名为"),a("code",[t._v("If-Modified-Sine")]),t._v("放在请求头中")]),t._v(" "),a("li",[a("code",[t._v("ETag")]),t._v(":资源对应的唯一字符串后续访问的时候发送请求和资源标识的字段名为"),a("code",[t._v("If-None-Match")]),t._v("放在请求头里面，优先使用"),a("code",[t._v("Etag")])])]),t._v(" "),a("p",[t._v("Last-Modified的值只精确到秒级")]),t._v(" "),a("p",[t._v("文件如果每隔一段时间都重复生成, 但内容相同, Last-Modified会每次返回资源文件, 即便是内容相同。但是ETag可以判断出文件内容相同就返回304, 使用缓存")]),t._v(" "),a("p",[a("img",{attrs:{src:v(400),alt:"cache"}})]),t._v(" "),a("h2",{attrs:{id:"dns缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dns缓存"}},[t._v("#")]),t._v(" DNS缓存")]),t._v(" "),a("p",[t._v("了增加访问效率，计算机有域名缓存机制，当访问过某个网站并得到其IP后，会将其域名和IP缓存下来，下一次访问的时候，就不需要再请求域名服务器获取IP，直接使用缓存中的IP，提高了响应的速度。当然缓存是有有效时间的，当过了有效时间后，再次请求网站，还是需要先请求域名解析。")]),t._v(" "),a("p",[t._v("但是域名缓存机制也可能会带来麻烦。例如IP已变化了，仍然使用缓存中的IP来访问，将会访问失败。再如 同一个域名在内网和外网访问时所对应的IP是不同的，如在外网访问时通过外网IP映射到内网的IP。同一台电脑在外网环境下访问了此域名，再换到内网来访问此域名，在DNS缓存的作用下，也会去访问外网的IP，导致访问失败。根据情况，可以手动清除DNS缓存或者禁止DNS缓存机制。")]),t._v(" "),a("p",[t._v("在你的chrome浏览器中输入:chrome://dns/，你可以看到chrome浏览器的DNS缓存。系统缓存主要存在/etc/hosts(Linux系统)中")])])}),[],!1,null,null,null);a.default=e.exports}}]);