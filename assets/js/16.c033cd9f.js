(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{413:function(t,a,s){"use strict";s.r(a);var r=s(2),v=Object(r.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"http2-0"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http2-0"}},[t._v("#")]),t._v(" HTTP2.0")]),t._v(" "),a("h2",{attrs:{id:"头部压缩"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#头部压缩"}},[t._v("#")]),t._v(" 头部压缩")]),t._v(" "),a("p",[t._v("HTTP/2使用HPAK算法对HTTP头部进行压缩，减少了头部信息传输的开销。有助于减少数据传输量，尤其是在移动网络和高延迟网络上")]),t._v(" "),a("h2",{attrs:{id:"多路复用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多路复用"}},[t._v("#")]),t._v(" 多路复用")]),t._v(" "),a("p",[t._v("HTTP/2允许在单个连接上同时发送多个请求和响应，而不需要等待一个请求的响应才能发送下一个请求。这显著提高了数据传输的效率，减少了延迟，尤其对于复杂的网页来说效果明显")]),t._v(" "),a("h2",{attrs:{id:"服务器推送"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#服务器推送"}},[t._v("#")]),t._v(" 服务器推送")]),t._v(" "),a("p",[t._v("HTTP/2允许服务器在客户端请求之前主动将资源推送给客户端。这可以提前发送可能需要的资源，减少了客户端请求的往返次数，从而改善了性能")]),t._v(" "),a("h2",{attrs:{id:"二进制协议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二进制协议"}},[t._v("#")]),t._v(" 二进制协议")]),t._v(" "),a("p",[t._v("HTTP/2采用了二进制协议，与HTTP/1.1的文本协议不同。这使得协议的解析更加高效，因为计算器更容易处理二进制数据")]),t._v(" "),a("h2",{attrs:{id:"流控制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#流控制"}},[t._v("#")]),t._v(" 流控制")]),t._v(" "),a("p",[t._v("HTTP/2引入了流控制机制，可以防止一个流的数据拥塞整个连接，确保了各个流能够公平竞争连接的宽度")]),t._v(" "),a("h2",{attrs:{id:"优先级"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#优先级"}},[t._v("#")]),t._v(" 优先级")]),t._v(" "),a("p",[t._v("HTTP/2允许请求和响应设置优先级，以确保关键资源优先加载")]),t._v(" "),a("h2",{attrs:{id:"安全性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安全性"}},[t._v("#")]),t._v(" 安全性")]),t._v(" "),a("p",[t._v("虽然HTTP/2本身并不要求使用加密，但现实中绝大多数HTTP/2连接都是通过TLS/SSL加密的，以提供更高的安全性")])])}),[],!1,null,null,null);a.default=v.exports}}]);